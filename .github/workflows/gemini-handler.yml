# .github/workflows/gemini-handler.yml
name: Gemini Task Handler

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      url:
        description: 'URL of the issue or PR to process'
        required: true
        type: string

jobs:
  handle-gemini-task:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    if: |
      (github.event_name != 'workflow_dispatch' && contains(github.event.comment.body, '@gemini')) ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR Diff
        id: pr_diff
        if: github.event.name == 'pull_request_review_comment'
        run: |
          PR_NUMBER=$(echo "${{ github.event.pull_request.html_url }}" | awk -F'/' '{print $NF}')
          DIFF_URL="${{ github.event.pull_request.diff_url }}"
          echo "Fetching diff from $DIFF_URL"
          DIFF=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3.diff" "$DIFF_URL")
          # Escape for JSON and slice to avoid being too large
          DIFF_ESCAPED=$(echo "$DIFF" | jq -s -R . | cut -c 1-8000)
          echo "diff=${DIFF_ESCAPED}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Gemini Task File
        run: |
          mkdir -p .gemini-tasks

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            CONTEXT_URL="${{ github.event.inputs.url }}"
            COMMENT_BODY="Manual workflow dispatch"
            COMMENT_AUTHOR="manual-trigger"
            TASK_ID="manual-$(date +%s)"
          else
            CONTEXT_URL="${{ github.event.comment.html_url }}"
            COMMENT_BODY='''${{ github.event.comment.body }}'''
            COMMENT_AUTHOR="${{ github.event.comment.user.login }}"
            TASK_ID="${{ github.event.comment.id }}"
          fi

          # Determine context type (issue or PR)
          if [[ "$CONTEXT_URL" == *"/pull/"* ]]; then
            CONTEXT_TYPE="Pull Request"
            PR_NUMBER=$(echo "$CONTEXT_URL" | awk -F'/' '{print $NF}' | awk -F'#' '{print $1}')
            CONTEXT_TITLE="${{ github.event.pull_request.title }}"
            ADDITIONAL_CONTEXT="**PR Diff:**\n```diff\n${{ steps.pr_diff.outputs.diff }}\n```"
            TASK_FILENAME="GEMINI_TASK_pr_${PR_NUMBER}_${TASK_ID}.md"
          else
            CONTEXT_TYPE="Issue"
            ISSUE_NUMBER=$(echo "$CONTEXT_URL" | awk -F'/' '{print $NF}' | awk -F'#' '{print $1}')
            CONTEXT_TITLE="${{ github.event.issue.title }}"
            ADDITIONAL_CONTEXT="**Issue Body:**\n> ${{ github.event.issue.body }}"
            TASK_FILENAME="GEMINI_TASK_issue_${ISSUE_NUMBER}_${TASK_ID}.md"
          fi

          # Create the task file
          cat > .gemini-tasks/${TASK_FILENAME} << EOF
          # ðŸ¤– Gemini Task

          A new task has been assigned to Gemini.

          ## Context
          - **Type**: ${CONTEXT_TYPE}
          - **Title**: ${CONTEXT_TITLE}
          - **URL**: ${CONTEXT_URL}
          - **Triggered by**: @${COMMENT_AUTHOR}
          - **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

          ## User Request
          The user left the following comment:
          > ${COMMENT_BODY}

          ## Additional Context
          ${ADDITIONAL_CONTEXT}

          ## Instructions for Gemini
          1.  **Analyze the request** above in the context of the linked ${CONTEXT_TYPE}.
          2.  **Perform the requested action** (e.g., review the code, suggest an implementation, answer a question).
          3.  **Report your findings** back to the user in the ${CONTEXT_TYPE} thread.
          ---
          *This is an automated task file.*
          EOF

          echo "TASK_FILE_PATH=.gemini-tasks/${TASK_FILENAME}" >> $GITHUB_ENV
          echo "Created task file: .gemini-tasks/${TASK_FILENAME}"

      - name: Commit Task File
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .gemini-tasks/
          git commit -m "ðŸ¤– New Gemini task: ${{ env.TASK_FILE_PATH }}" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Comment on Issue/PR
        if: github.event_name != 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const taskFilePath = process.env.TASK_FILE_PATH;
            const body = `âœ… **Gemini task created!**

            I have created a task file for myself at: `${taskFilePath}`

            I will now read the task file and get to work.`

            if (context.payload.issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            } else if (context.payload.pull_request) {
              await github.rest.pulls.createReviewComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: body,
                comment_id: context.payload.comment.id,
              });
            }
